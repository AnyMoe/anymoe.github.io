[{"title":"Linux 下通过策略路由实现出站入站不同路由","url":"/2020/04/different-routing-outbound-and- inbound/","content":"\nSEO: 实现出站入站不同路由、多网卡、Linux 策略路由\n\n## 问题简述\n  一般的，在系统路由表内只能有一条默认路由。当出站数据包根据目的IP地址选路失败后，执行默认路由。\n  但这一条默认路由的设计可能会让您遇到不少问题。比如当您在服务器上运行vpn ，让所有流量走vpn之后，您会发现部署在服务器上的网站在外部访问不到啦。\n  如何让出站流量和入站流量走不同的路由呢？这就要请出我们今天的主角 ———— **策略路由**。\n\n## 策略路由\n  策略路由，即 PBR（Policy-Based Routing），与传统的基于IP报文目的地址查找路由表进行转发不同，它可以依据用户自定义的策略进行报文转发。\n  我们使用 ip-route 和 **ip-rule** 来完成任务。\n  （Openwrt 玩家请去安装 ip-full ）\n\n## 示例拓扑\n现有 he 和 教育网 两个网络，实现效果为入站使用教育网，出站使用 he 。\n主机网卡名为: \nCERNET —— eth0\nHE —— eth1\n\nCERNET网络为: 192.168.1.2/24 \n默认网关 192.168.1.1\n\nHE网络为： 192.168.2.2/24 \n默认网关 192.168.2.1\n\n## 实现思路\n\n为了方便复制粘贴这里都加上了 `` sudo ``\n**请注意，命令执行都是即时生效的。** 如果您正在~~作死~~远程配置网络，建议您遵照每一条命令的顺序，避免产生不必要的麻烦。\n\n#### 1. 先加上入站的默认路由\n```\nsudo ip route add default via 192.168.1.1 dev eth0\n```\n\n\n#### 2. 接着我们创建路由表\n```\nsudo echo \"80 he\" >> /etc/iproute2/rt_tables\nsudo echo \"90 cetnet\" >> /etc/iproute2/rt_tables\n```\n  第一位是优先级，数字越小越优先。第二位是表名称。后面这个文件我建议您执行之前先去看一眼。确保这两个数字小于 0 以外的其它数字。\n\n#### 3. 加上本网段路由\n教育网:\n``\nsudo ip route add 192.168.1.1/24 dev eno1 table cernet\n``\n\nHE:\n``\nsudo ip route add 192.168.2.1/24 dev tun0 table he\n``\n\ntable 后面是您在第二步时定义的名称\n\n#### 4. 加上两表各自的默认路由\n教育网:\n``\nsudo ip route add default via 192.168.1.1 table cernet\n``\n\nHE:\n``\nsudo ip route add default via 192.168.2.1 table he\n``\n\n相信您注意到了，这跟第一步相比就是多了表\n\n#### 5. 定义规则\n教育网:\n``\nsudo ip rule add from 192.168.1.2/32 table cernet\n``\n\nHE:\n``\nsudo ip rule add from via 192.168.2.2/32 table he\n``\n\n这里的两个 ip 就是两张网卡各自获得的ip，/32 代表只有这一个ip。翻译一下就是来自这个 ip 的数据包走某个表（网卡）。\n\n\n\n## You’ve figured it all out. \n欢迎留言\n\n","tags":["计算机网络","路由"],"categories":["网络"]},{"title":"从 MoeBlog 到 Hexo","url":"/2020/04/from-MoeBlog-to-Hexo/","content":"\n这两天把 blog 从 [MoeBlog](https://github.com/AnyMoe/MoeBlog) 搬到了 Hexo\n\nHexo 的纯静态页面加载真的很快，真香警告。\n\n为什么迁移呢，主要是用 [Github API](https://developer.github.com/v3/gists/) + [Gist](https://gist.github.com/) 动态写 blog 的想法真的很棒。\n但速度真的很慢。\n而且很容易出道私人 Gist 。\n\n相比之下，静态化的好处就很多了，部署在 [Github Page](https://pages.github.com/) 的页面也能很快。\n\n而在决定迁移之前我还考虑了两个选择:\n [Typecho](https://typecho.org/) + [handsome](https://www.ihewro.com/archives/489/) which modified by [Jindai Kirin](https://moe.best/) \n和\n Wordpress +  [smarty_hankin](https://gitee.com/theme-smarty/smarty_hankin)\n\n它们都是很棒的选择，Wordpess 是功能十分完备图形化设置非常好的博客软件，smarty_hankin 是挺好看的开源免费主题。\nTypecho 十分轻巧，handsome 在好看和界面设计优良之余更为 Typecho 不臃肿的添上了丰富的功能。而修改后的主题非常萌。\n\n但是对于我来说，如果选择后二者就需要一个完整的配置环境，我已经不想在这方面上花上时间。如果要使用它们的话， [GitHub Student Developer Pack](https://education.github.com/pack) 里面免费 Education Host 是不错的选择。 嗯， 对， 虚拟主机。还有值得注意的是，Typecho [上一个释出版本](https://github.com/typecho/typecho/tree/v1.1-17.10.30-release)已经是 2017 年的。\n\n就酱","categories":["碎碎念"]},{"title":"github page使用 vue-router history 模式思路","url":"/2019/04/github-page-use-vue-router-history-mode/","content":"\n看着url里的#好丑…\n\n>   vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，页面不会重新加载。\n\n  但是丑啊，一点都不萌\n\n没办法只能自己动手了\n如果是nginx\n\n```\nlocation / {\n  try_files $uri $uri/ /index.html;\n}\n```\n\n然而我们是serverless\ncloudflare的worker emmmm…只有一条免费\n\n所以思路很简单 利用404页面\n反正不存在的url都会去404\n\n那么怎么复制呢，\n当然是用CopyWebpackPlugin啦 (文档地址)\n具体可见我的commit\n\nbye-bye\n继续nervous去\n","tags":["vue","github"],"categories":["Web"]},{"title":"记一下 telegram 网页版的搭建方法","url":"/2019/04/记一下-telegram-网页版的搭建方法/","content":"\n  反向代理\n  gfw实际上墙的是下面的API服务器。所以我们需要反代以下十组服务器(支持v4/v6)。\n\n```\npluto.web.telegram.org\npluto-1.web.telegram.org\nvenus.web.telegram.org\nvenus-1.web.telegram.org\naurora.web.telegram.org\naurora-1.web.telegram.org\nvesta.web.telegram.org\nvesta-1.web.telegram.org\nflora.web.telegram.org\nflora-1.web.telegram.org\n```\n\n\n此处有个快速配置的方法\n```\nlocation ~* ^/(pluto|pluto-1|venus|venus-1|aurora|aurora-1|vesta|vesta-1|flora|flora-1)/(.*)$ {\n        proxy_buffering off;\n        proxy_pass https://$1.web.telegram.org/$2;\n}\n```\n\n\n  申请telegram API\n  申请网址https://my.telegram.org，登录后点击API development tools，然后创建API\n  记得保留成功界面的所有信息，有的信息永久只会显示一次。\n  搭建[webogram](https://github.com/zhukov/webogram.git)\n  这个实在没有什么好说的，直接build就好，不过值得注意的是最新的webogram却css，需要去官方“偷”几个回来。\n  然后注意把申请的API的值替换。\n\n即可。\n","tags":["Telegram"],"categories":["Web"]},{"title":"解决Your project path contains non-ASCII characters","url":"/2019/04/fix-Your-project-path-contains-non-ASCII-characters/","content":"\n解决Your project path contains non-ASCII characters\n这是因为项目目录名中有中文、日文这些非ASCII文字造成的\n将\n\n```\ncom.android.build.gradle.overridePathCheck=true\n```\n\n追加到项目的根目录下的gradle.properties 文件底下即可\n","categories":["Android"]},{"title":"MoeBlog问世啦","url":"/2019/04/Hello-MoeBlog/","content":"\n基于vblog的fork版本MoeBlog问世啦\nGithub:[MoeBlog](https://github.com/AnyMoe/MoeBlog)\nfavicon √\n更加可爱 √\n修改时间显示 √\n干掉手机版 √\n干掉简要说明 √\n因为感觉单是去掉手机版这一项就未必会为原作者接受，就分支出这一个版本吧。\nWelcome star!\n"},{"title":"待办事项:修改一个适合自己的blog程序","url":"/2019/04/待办事项-修改一个适合自己的blog程序/","content":"\nVblog是个不错的开源博客程序，基于gist可以让博文动态的发出，但是还是有不少问题需要优化，这里是个to-do list:\nfavicon √\n更加可爱\n修复更新时间不正确的问题，或者这个去掉 √\n干掉手机版 √\n干掉简要说明 √\n换个更加强大的编辑器\n音乐功能列表化\n\n以上的修改除了第一、三个估计也不会pr到原repo。\n说实话我对MPL协议不太喜欢，这种情况下我甚至更青睐LGPL（当然有可能还是MIT、BSD）。\n\nMDZZ Secret的gist都放出来\n"},{"title":"迁移Github Pages","url":"/2019/04/moved-to-Github-Pages/","content":"\n迁移咯~\n思来想去，还是GitHub Pages是好地方，不应该把博客和应用服务器放一起。\n"}]